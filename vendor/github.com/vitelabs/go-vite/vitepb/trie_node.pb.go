// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vitepb/trie_node.proto

package vitepb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TrieNode struct {
	NodeType             uint32            `protobuf:"varint,1,opt,name=NodeType,proto3" json:"NodeType,omitempty"`
	Children             map[uint32][]byte `protobuf:"bytes,2,rep,name=Children,proto3" json:"Children,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Key                  []byte            `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Child                []byte            `protobuf:"bytes,4,opt,name=child,proto3" json:"child,omitempty"`
	Value                []byte            `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TrieNode) Reset()         { *m = TrieNode{} }
func (m *TrieNode) String() string { return proto.CompactTextString(m) }
func (*TrieNode) ProtoMessage()    {}
func (*TrieNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_cadd8afa91e4b7ec, []int{0}
}

func (m *TrieNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrieNode.Unmarshal(m, b)
}
func (m *TrieNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrieNode.Marshal(b, m, deterministic)
}
func (m *TrieNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrieNode.Merge(m, src)
}
func (m *TrieNode) XXX_Size() int {
	return xxx_messageInfo_TrieNode.Size(m)
}
func (m *TrieNode) XXX_DiscardUnknown() {
	xxx_messageInfo_TrieNode.DiscardUnknown(m)
}

var xxx_messageInfo_TrieNode proto.InternalMessageInfo

func (m *TrieNode) GetNodeType() uint32 {
	if m != nil {
		return m.NodeType
	}
	return 0
}

func (m *TrieNode) GetChildren() map[uint32][]byte {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *TrieNode) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *TrieNode) GetChild() []byte {
	if m != nil {
		return m.Child
	}
	return nil
}

func (m *TrieNode) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*TrieNode)(nil), "vitepb.TrieNode")
	proto.RegisterMapType((map[uint32][]byte)(nil), "vitepb.TrieNode.ChildrenEntry")
}

func init() { proto.RegisterFile("vitepb/trie_node.proto", fileDescriptor_cadd8afa91e4b7ec) }

var fileDescriptor_cadd8afa91e4b7ec = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0xcb, 0x2c, 0x49,
	0x2d, 0x48, 0xd2, 0x2f, 0x29, 0xca, 0x4c, 0x8d, 0xcf, 0xcb, 0x4f, 0x49, 0xd5, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x62, 0x83, 0x88, 0x2b, 0xdd, 0x65, 0xe4, 0xe2, 0x08, 0x29, 0xca, 0x4c, 0xf5,
	0xcb, 0x4f, 0x49, 0x15, 0x92, 0xe2, 0xe2, 0x00, 0xd1, 0x21, 0x95, 0x05, 0xa9, 0x12, 0x8c, 0x0a,
	0x8c, 0x1a, 0xbc, 0x41, 0x70, 0xbe, 0x90, 0x15, 0x17, 0x87, 0x73, 0x46, 0x66, 0x4e, 0x4a, 0x51,
	0x6a, 0x9e, 0x04, 0x93, 0x02, 0xb3, 0x06, 0xb7, 0x91, 0x9c, 0x1e, 0xc4, 0x0c, 0x3d, 0x98, 0x7e,
	0x3d, 0x98, 0x02, 0xd7, 0xbc, 0x92, 0xa2, 0xca, 0x20, 0xb8, 0x7a, 0x21, 0x01, 0x2e, 0xe6, 0xec,
	0xd4, 0x4a, 0x09, 0x66, 0x05, 0x46, 0x0d, 0x9e, 0x20, 0x10, 0x53, 0x48, 0x84, 0x8b, 0x35, 0x19,
	0x24, 0x2b, 0xc1, 0x02, 0x16, 0x83, 0x70, 0x40, 0xa2, 0x65, 0x89, 0x39, 0xa5, 0xa9, 0x12, 0xac,
	0x10, 0x51, 0x30, 0x47, 0xca, 0x9a, 0x8b, 0x17, 0xc5, 0x60, 0x98, 0x71, 0x10, 0x17, 0xc2, 0x8c,
	0x83, 0x68, 0x64, 0x42, 0xd2, 0x68, 0xc5, 0x64, 0xc1, 0x98, 0xc4, 0x06, 0xf6, 0xae, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0x3e, 0x67, 0xce, 0xf5, 0x08, 0x01, 0x00, 0x00,
}
